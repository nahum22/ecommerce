import { useEffect, useState } from "react";
import firebase from "firebase/compat/app";
import "firebase/compat/auth";
import "firebase/compat/database";
import Footer from "./Footer";
import CarouselPage from "./CarouselPage";
import FirstNavbar from "./FirstNavbar";
import { useGlobalContext } from "./Context";
import filledHeart from "./images/filledHeart.png"; // Path to your filled heart image
import emptyHeart from "./images/emptyHeart.png"; // Path to your empty heart image

const LandingPage = () => {
  const [data, setData] = useState([]);
  const { products, categories, loginWithGoogle, user } = useGlobalContext();
  const [favorites, setFavorites] = useState([]);

  // Assuming firebase has been configured elsewhere in your app
  const db = firebase.database();

  const fetchFavorites = (userId) => {
    // Fetch user-specific data from Firebase Realtime Database
    db.ref(`favorites/${userId}`).on("value", (snapshot) => {
      const favs = [];
      snapshot.forEach((childSnapshot) => {
        favs.push({
          id: childSnapshot.key,
          productId: childSnapshot.val().productId,
          ...childSnapshot.val(),
        });
      });
      setFavorites(favs);
    });
  };

  const addToFavorite = (productId) => {
    if (!user) return;

    const product = products.find((product) => product.id === productId);
    if (!product) return; // Ensure the product exists

    const newFavorite = {
      productId,
      name: product.name,
      imageUrl: product.imageUrl,
      // Add other product properties as needed
    };

    // Push new favorite to the user's favorites list in Realtime Database
    const newFavoriteRef = db.ref(`favorites/${user.uid}`).push(newFavorite);

    // Update local state
    setFavorites([
      ...favorites,
      {
        id: newFavoriteRef.key, // Use the key generated by Firebase
        ...newFavorite,
      },
    ]);
  };

  const removeFromFavorite = (productId) => {
    if (!user) return;

    const favToRemove = favorites.find((fav) => fav.productId === productId);
    if (favToRemove) {
      // Remove the favorite from the user's favorites list in Realtime Database
      db.ref(`favorites/${user.uid}`).child(favToRemove.id).remove();

      // Update local state
      setFavorites(favorites.filter((fav) => fav.productId !== productId));
    }
  };

  const toggleFavorite = (productId) => {
    if (isFavorite(productId)) {
      removeFromFavorite(productId);
    } else {
      addToFavorite(productId);
    }
  };

  const isFavorite = (productId) => {
    return favorites.some((fav) => fav.productId === productId);
  };

  const logout = () => {
    firebase
      .auth()
      .signOut()
      .then(() => {
        setUser(null);
        setFavorites([]);
      })
      .catch((error) => {
        console.error("Error during sign out:", error);
      });
  };

  return (
    <>
      <FirstNavbar />
      <main className="content">
        <CarouselPage />
        <h2>Data from Firebase Realtime Database:</h2>
        <div>
          {user ? (
            <>
              <span>Logged in as {user.displayName}</span>
              <button onClick={logout}>Logout</button>
            </>
          ) : (
            <button onClick={loginWithGoogle}>Login with Google</button>
          )}
        </div>
        <div className="productsContainer">
          {products.map((item) => (
            <div className="productCard" key={item.id}>
              <div>
                <img src={item.imageUrl} alt={item.name} />
                <h2>{item.name}</h2>
                <p>Product Description</p>{" "}
                {/* Add product description or any other details */}
              </div>
              <img
                src={isFavorite(item.id) ? filledHeart : emptyHeart}
                alt={
                  isFavorite(item.id)
                    ? "Remove from Favorites"
                    : "Add to Favorites"
                }
                onClick={() => toggleFavorite(item.id)}
                className="heartIcon"
              />
            </div>
          ))}
        </div>
      </main>
      <Footer />
    </>
  );
};

export default LandingPage;
